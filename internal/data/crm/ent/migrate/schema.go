// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ContactsColumns holds the columns for the "contacts" table.
	ContactsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt, Comment: "创建人"},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true, Comment: "修改人"},
		{Name: "name", Type: field.TypeString, Comment: "联系人姓名"},
		{Name: "position", Type: field.TypeString, Nullable: true, Comment: "职位"},
		{Name: "phone", Type: field.TypeString, Nullable: true, Comment: "手机号"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "邮箱"},
		{Name: "customer_contacts", Type: field.TypeInt},
	}
	// ContactsTable holds the schema information for the "contacts" table.
	ContactsTable = &schema.Table{
		Name:       "contacts",
		Comment:    "客户联系方式",
		Columns:    ContactsColumns,
		PrimaryKey: []*schema.Column{ContactsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contacts_customers_contacts",
				Columns:    []*schema.Column{ContactsColumns[9]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "contact_created_at",
				Unique:  false,
				Columns: []*schema.Column{ContactsColumns[1]},
			},
		},
	}
	// ContractsColumns holds the columns for the "contracts" table.
	ContractsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt, Comment: "创建人"},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true, Comment: "修改人"},
		{Name: "contract_no", Type: field.TypeString, Unique: true, Comment: "合同编号"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "合同金额", Default: 0},
		{Name: "signed_at", Type: field.TypeTime, Nullable: true, Comment: "签订日期"},
		{Name: "end_at", Type: field.TypeTime, Nullable: true, Comment: "到期日期"},
		{Name: "customer_contracts", Type: field.TypeInt},
	}
	// ContractsTable holds the schema information for the "contracts" table.
	ContractsTable = &schema.Table{
		Name:       "contracts",
		Comment:    "合同",
		Columns:    ContractsColumns,
		PrimaryKey: []*schema.Column{ContractsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contracts_customers_contracts",
				Columns:    []*schema.Column{ContractsColumns[9]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "contract_created_at",
				Unique:  false,
				Columns: []*schema.Column{ContractsColumns[1]},
			},
		},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt, Comment: "创建人"},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true, Comment: "修改人"},
		{Name: "name", Type: field.TypeString, Comment: "客户名称"},
		{Name: "industry", Type: field.TypeString, Nullable: true, Comment: "所属行业"},
		{Name: "source", Type: field.TypeString, Nullable: true, Comment: "客户来源"},
		{Name: "level", Type: field.TypeString, Nullable: true, Comment: "客户等级"},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true, Comment: "自定义扩展字段"},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Comment:    "客户",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "customer_created_at",
				Unique:  false,
				Columns: []*schema.Column{CustomersColumns[1]},
			},
		},
	}
	// FollowUpsColumns holds the columns for the "follow_ups" table.
	FollowUpsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt, Comment: "创建人"},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true, Comment: "修改人"},
		{Name: "type", Type: field.TypeEnum, Comment: "跟进类型", Enums: []string{"call", "meeting", "email", "visit", "other"}, Default: "other"},
		{Name: "content", Type: field.TypeString, Comment: "跟进内容"},
		{Name: "followed_at", Type: field.TypeTime, Comment: "跟进时间"},
		{Name: "customer_follow_ups", Type: field.TypeInt},
	}
	// FollowUpsTable holds the schema information for the "follow_ups" table.
	FollowUpsTable = &schema.Table{
		Name:       "follow_ups",
		Comment:    "跟进记录",
		Columns:    FollowUpsColumns,
		PrimaryKey: []*schema.Column{FollowUpsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "follow_ups_customers_follow_ups",
				Columns:    []*schema.Column{FollowUpsColumns[8]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "followup_created_at",
				Unique:  false,
				Columns: []*schema.Column{FollowUpsColumns[1]},
			},
		},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt, Comment: "创建人"},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true, Comment: "修改人"},
		{Name: "amount", Type: field.TypeFloat64, Comment: "收款金额", Default: 0},
		{Name: "received_at", Type: field.TypeTime, Nullable: true, Comment: "收款日期"},
		{Name: "contract_payments", Type: field.TypeInt},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:       "payments",
		Comment:    "收款记录",
		Columns:    PaymentsColumns,
		PrimaryKey: []*schema.Column{PaymentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "payments_contracts_payments",
				Columns:    []*schema.Column{PaymentsColumns[7]},
				RefColumns: []*schema.Column{ContractsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "payment_created_at",
				Unique:  false,
				Columns: []*schema.Column{PaymentsColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ContactsTable,
		ContractsTable,
		CustomersTable,
		FollowUpsTable,
		PaymentsTable,
	}
)

func init() {
	ContactsTable.ForeignKeys[0].RefTable = CustomersTable
	ContractsTable.ForeignKeys[0].RefTable = CustomersTable
	FollowUpsTable.ForeignKeys[0].RefTable = CustomersTable
	PaymentsTable.ForeignKeys[0].RefTable = ContractsTable
}
