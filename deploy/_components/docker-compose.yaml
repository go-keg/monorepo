services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - monorepo

  kafka:
    image: bitnami/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - '9093:9093'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    networks:
      - monorepo

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.5.0
    ports:
      - "19092:8080"
    restart: always
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - monorepo

  jaeger:
    image: jaegertracing/all-in-one:1.16
    ports:
      - "16686:16686"
      - "14268:14268"
      - "9412:9412"
    networks:
      - monorepo

  prom-node-exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    networks:
      - monorepo

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monorepo

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-storage:/var/lib/grafana
    networks:
      - monorepo

  redis:
    image: bitnami/redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - monorepo

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d/:ro,cached
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro,cached
      - ./nginx/log/:/var/log/nginx/:rw,cached
    networks:
      - monorepo

  postgres:
    image: postgres:14.7-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ports:
      - "19000:9000"
      - "18123:8123"
    volumes:
      - ./ch_data:/var/lib/clickhouse/
      - ./ch_logs:/var/log/clickhouse-server/
  #endregion

networks:
  monorepo:
    driver: bridge