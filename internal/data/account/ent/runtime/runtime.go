// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"time"

	"github.com/go-keg/monorepo/internal/data/account/ent/membership"
	"github.com/go-keg/monorepo/internal/data/account/ent/oauthaccount"
	"github.com/go-keg/monorepo/internal/data/account/ent/oauthprovider"
	"github.com/go-keg/monorepo/internal/data/account/ent/organization"
	"github.com/go-keg/monorepo/internal/data/account/ent/permission"
	"github.com/go-keg/monorepo/internal/data/account/ent/schema"
	"github.com/go-keg/monorepo/internal/data/account/ent/tenant"
	"github.com/go-keg/monorepo/internal/data/account/ent/tenantrole"
	"github.com/go-keg/monorepo/internal/data/account/ent/tenantuser"
	"github.com/go-keg/monorepo/internal/data/account/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	membershipMixin := schema.Membership{}.Mixin()
	membershipMixinFields0 := membershipMixin[0].Fields()
	_ = membershipMixinFields0
	membershipFields := schema.Membership{}.Fields()
	_ = membershipFields
	// membershipDescCreatedAt is the schema descriptor for created_at field.
	membershipDescCreatedAt := membershipMixinFields0[0].Descriptor()
	// membership.DefaultCreatedAt holds the default value on creation for the created_at field.
	membership.DefaultCreatedAt = membershipDescCreatedAt.Default.(func() time.Time)
	// membershipDescUpdatedAt is the schema descriptor for updated_at field.
	membershipDescUpdatedAt := membershipMixinFields0[1].Descriptor()
	// membership.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	membership.DefaultUpdatedAt = membershipDescUpdatedAt.Default.(func() time.Time)
	// membership.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	membership.UpdateDefaultUpdatedAt = membershipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// membershipDescIsLeader is the schema descriptor for is_leader field.
	membershipDescIsLeader := membershipFields[2].Descriptor()
	// membership.DefaultIsLeader holds the default value on creation for the is_leader field.
	membership.DefaultIsLeader = membershipDescIsLeader.Default.(bool)
	oauthaccountMixin := schema.OAuthAccount{}.Mixin()
	oauthaccountMixinFields0 := oauthaccountMixin[0].Fields()
	_ = oauthaccountMixinFields0
	oauthaccountFields := schema.OAuthAccount{}.Fields()
	_ = oauthaccountFields
	// oauthaccountDescCreatedAt is the schema descriptor for created_at field.
	oauthaccountDescCreatedAt := oauthaccountMixinFields0[0].Descriptor()
	// oauthaccount.DefaultCreatedAt holds the default value on creation for the created_at field.
	oauthaccount.DefaultCreatedAt = oauthaccountDescCreatedAt.Default.(func() time.Time)
	// oauthaccountDescUpdatedAt is the schema descriptor for updated_at field.
	oauthaccountDescUpdatedAt := oauthaccountMixinFields0[1].Descriptor()
	// oauthaccount.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	oauthaccount.DefaultUpdatedAt = oauthaccountDescUpdatedAt.Default.(func() time.Time)
	// oauthaccount.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	oauthaccount.UpdateDefaultUpdatedAt = oauthaccountDescUpdatedAt.UpdateDefault.(func() time.Time)
	// oauthaccountDescProvider is the schema descriptor for provider field.
	oauthaccountDescProvider := oauthaccountFields[1].Descriptor()
	// oauthaccount.ProviderValidator is a validator for the "provider" field. It is called by the builders before save.
	oauthaccount.ProviderValidator = oauthaccountDescProvider.Validators[0].(func(string) error)
	oauthproviderFields := schema.OAuthProvider{}.Fields()
	_ = oauthproviderFields
	// oauthproviderDescName is the schema descriptor for name field.
	oauthproviderDescName := oauthproviderFields[1].Descriptor()
	// oauthprovider.NameValidator is a validator for the "name" field. It is called by the builders before save.
	oauthprovider.NameValidator = oauthproviderDescName.Validators[0].(func(string) error)
	// oauthproviderDescClientID is the schema descriptor for client_id field.
	oauthproviderDescClientID := oauthproviderFields[2].Descriptor()
	// oauthprovider.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	oauthprovider.ClientIDValidator = oauthproviderDescClientID.Validators[0].(func(string) error)
	// oauthproviderDescClientSecret is the schema descriptor for client_secret field.
	oauthproviderDescClientSecret := oauthproviderFields[3].Descriptor()
	// oauthprovider.ClientSecretValidator is a validator for the "client_secret" field. It is called by the builders before save.
	oauthprovider.ClientSecretValidator = oauthproviderDescClientSecret.Validators[0].(func(string) error)
	// oauthproviderDescAuthURL is the schema descriptor for auth_url field.
	oauthproviderDescAuthURL := oauthproviderFields[4].Descriptor()
	// oauthprovider.AuthURLValidator is a validator for the "auth_url" field. It is called by the builders before save.
	oauthprovider.AuthURLValidator = oauthproviderDescAuthURL.Validators[0].(func(string) error)
	// oauthproviderDescTokenURL is the schema descriptor for token_url field.
	oauthproviderDescTokenURL := oauthproviderFields[5].Descriptor()
	// oauthprovider.TokenURLValidator is a validator for the "token_url" field. It is called by the builders before save.
	oauthprovider.TokenURLValidator = oauthproviderDescTokenURL.Validators[0].(func(string) error)
	// oauthproviderDescUserInfoURL is the schema descriptor for user_info_url field.
	oauthproviderDescUserInfoURL := oauthproviderFields[6].Descriptor()
	// oauthprovider.UserInfoURLValidator is a validator for the "user_info_url" field. It is called by the builders before save.
	oauthprovider.UserInfoURLValidator = oauthproviderDescUserInfoURL.Validators[0].(func(string) error)
	// oauthproviderDescRedirectURI is the schema descriptor for redirect_uri field.
	oauthproviderDescRedirectURI := oauthproviderFields[7].Descriptor()
	// oauthprovider.RedirectURIValidator is a validator for the "redirect_uri" field. It is called by the builders before save.
	oauthprovider.RedirectURIValidator = oauthproviderDescRedirectURI.Validators[0].(func(string) error)
	// oauthproviderDescEnabled is the schema descriptor for enabled field.
	oauthproviderDescEnabled := oauthproviderFields[9].Descriptor()
	// oauthprovider.DefaultEnabled holds the default value on creation for the enabled field.
	oauthprovider.DefaultEnabled = oauthproviderDescEnabled.Default.(bool)
	organizationMixin := schema.Organization{}.Mixin()
	organizationMixinFields0 := organizationMixin[0].Fields()
	_ = organizationMixinFields0
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescCreatedAt is the schema descriptor for created_at field.
	organizationDescCreatedAt := organizationMixinFields0[0].Descriptor()
	// organization.DefaultCreatedAt holds the default value on creation for the created_at field.
	organization.DefaultCreatedAt = organizationDescCreatedAt.Default.(func() time.Time)
	// organizationDescUpdatedAt is the schema descriptor for updated_at field.
	organizationDescUpdatedAt := organizationMixinFields0[1].Descriptor()
	// organization.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organization.DefaultUpdatedAt = organizationDescUpdatedAt.Default.(func() time.Time)
	// organization.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organization.UpdateDefaultUpdatedAt = organizationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[2].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = organizationDescName.Validators[0].(func(string) error)
	permissionMixin := schema.Permission{}.Mixin()
	permissionMixinFields0 := permissionMixin[0].Fields()
	_ = permissionMixinFields0
	permissionFields := schema.Permission{}.Fields()
	_ = permissionFields
	// permissionDescCreatedAt is the schema descriptor for created_at field.
	permissionDescCreatedAt := permissionMixinFields0[0].Descriptor()
	// permission.DefaultCreatedAt holds the default value on creation for the created_at field.
	permission.DefaultCreatedAt = permissionDescCreatedAt.Default.(func() time.Time)
	// permissionDescUpdatedAt is the schema descriptor for updated_at field.
	permissionDescUpdatedAt := permissionMixinFields0[1].Descriptor()
	// permission.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	permission.DefaultUpdatedAt = permissionDescUpdatedAt.Default.(func() time.Time)
	// permission.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	permission.UpdateDefaultUpdatedAt = permissionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// permissionDescSort is the schema descriptor for sort field.
	permissionDescSort := permissionFields[7].Descriptor()
	// permission.DefaultSort holds the default value on creation for the sort field.
	permission.DefaultSort = permissionDescSort.Default.(int)
	tenantMixin := schema.Tenant{}.Mixin()
	tenantMixinFields0 := tenantMixin[0].Fields()
	_ = tenantMixinFields0
	tenantFields := schema.Tenant{}.Fields()
	_ = tenantFields
	// tenantDescCreatedAt is the schema descriptor for created_at field.
	tenantDescCreatedAt := tenantMixinFields0[0].Descriptor()
	// tenant.DefaultCreatedAt holds the default value on creation for the created_at field.
	tenant.DefaultCreatedAt = tenantDescCreatedAt.Default.(func() time.Time)
	// tenantDescUpdatedAt is the schema descriptor for updated_at field.
	tenantDescUpdatedAt := tenantMixinFields0[1].Descriptor()
	// tenant.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tenant.DefaultUpdatedAt = tenantDescUpdatedAt.Default.(func() time.Time)
	// tenant.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tenant.UpdateDefaultUpdatedAt = tenantDescUpdatedAt.UpdateDefault.(func() time.Time)
	// tenantDescName is the schema descriptor for name field.
	tenantDescName := tenantFields[1].Descriptor()
	// tenant.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tenant.NameValidator = tenantDescName.Validators[0].(func(string) error)
	// tenantDescMaxUsers is the schema descriptor for max_users field.
	tenantDescMaxUsers := tenantFields[2].Descriptor()
	// tenant.DefaultMaxUsers holds the default value on creation for the max_users field.
	tenant.DefaultMaxUsers = tenantDescMaxUsers.Default.(int)
	tenantroleMixin := schema.TenantRole{}.Mixin()
	tenantroleMixinFields0 := tenantroleMixin[0].Fields()
	_ = tenantroleMixinFields0
	tenantroleFields := schema.TenantRole{}.Fields()
	_ = tenantroleFields
	// tenantroleDescCreatedAt is the schema descriptor for created_at field.
	tenantroleDescCreatedAt := tenantroleMixinFields0[0].Descriptor()
	// tenantrole.DefaultCreatedAt holds the default value on creation for the created_at field.
	tenantrole.DefaultCreatedAt = tenantroleDescCreatedAt.Default.(func() time.Time)
	// tenantroleDescUpdatedAt is the schema descriptor for updated_at field.
	tenantroleDescUpdatedAt := tenantroleMixinFields0[1].Descriptor()
	// tenantrole.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tenantrole.DefaultUpdatedAt = tenantroleDescUpdatedAt.Default.(func() time.Time)
	// tenantrole.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tenantrole.UpdateDefaultUpdatedAt = tenantroleDescUpdatedAt.UpdateDefault.(func() time.Time)
	// tenantroleDescName is the schema descriptor for name field.
	tenantroleDescName := tenantroleFields[2].Descriptor()
	// tenantrole.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tenantrole.NameValidator = tenantroleDescName.Validators[0].(func(string) error)
	// tenantroleDescSort is the schema descriptor for sort field.
	tenantroleDescSort := tenantroleFields[4].Descriptor()
	// tenantrole.DefaultSort holds the default value on creation for the sort field.
	tenantrole.DefaultSort = tenantroleDescSort.Default.(int)
	tenantuserFields := schema.TenantUser{}.Fields()
	_ = tenantuserFields
	// tenantuserDescIsOwner is the schema descriptor for is_owner field.
	tenantuserDescIsOwner := tenantuserFields[3].Descriptor()
	// tenantuser.DefaultIsOwner holds the default value on creation for the is_owner field.
	tenantuser.DefaultIsOwner = tenantuserDescIsOwner.Default.(bool)
	// tenantuserDescIsActive is the schema descriptor for is_active field.
	tenantuserDescIsActive := tenantuserFields[4].Descriptor()
	// tenantuser.DefaultIsActive holds the default value on creation for the is_active field.
	tenantuser.DefaultIsActive = tenantuserDescIsActive.Default.(bool)
	// tenantuserDescLastLoginTenant is the schema descriptor for last_login_tenant field.
	tenantuserDescLastLoginTenant := tenantuserFields[5].Descriptor()
	// tenantuser.DefaultLastLoginTenant holds the default value on creation for the last_login_tenant field.
	tenantuser.DefaultLastLoginTenant = tenantuserDescLastLoginTenant.Default.(bool)
	userMixin := schema.User{}.Mixin()
	userMixinHooks1 := userMixin[1].Hooks()
	user.Hooks[0] = userMixinHooks1[0]
	userMixinInters1 := userMixin[1].Interceptors()
	user.Interceptors[0] = userMixinInters1[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescNickname is the schema descriptor for nickname field.
	userDescNickname := userFields[2].Descriptor()
	// user.NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	user.NicknameValidator = userDescNickname.Validators[0].(func(string) error)
	// userDescIsAdmin is the schema descriptor for is_admin field.
	userDescIsAdmin := userFields[6].Descriptor()
	// user.DefaultIsAdmin holds the default value on creation for the is_admin field.
	user.DefaultIsAdmin = userDescIsAdmin.Default.(bool)
}

const (
	Version = "v0.14.4"                                         // Version of ent codegen.
	Sum     = "h1:/DhDraSLXIkBhyiVoJeSshr4ZYi7femzhj6/TckzZuI=" // Sum of ent codegen.
)
