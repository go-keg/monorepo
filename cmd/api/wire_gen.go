// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-keg/monorepo/internal/app/api/conf"
	"github.com/go-keg/monorepo/internal/app/api/data"
	"github.com/go-keg/monorepo/internal/app/api/server"
	"github.com/go-keg/monorepo/internal/app/api/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

import (
	_ "github.com/go-keg/monorepo/internal/data/example/ent/runtime"
)

// Injectors from wire.go:

func initApp(logger log.Logger, config *conf.Config) (*kratos.App, func(), error) {
	client, err := data.NewEntClient(config)
	if err != nil {
		return nil, nil, err
	}
	accountService := service.NewAccountService(client)
	httpServer := server.NewHTTPServer(config, logger, accountService)
	app := newApp(logger, httpServer)
	return app, func() {
	}, nil
}
